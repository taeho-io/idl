//
// DO NOT EDIT.
//
// Generated by protoc-gen-swiftgrpcrx.
// Source: id/id.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

import Foundation
import RxSwift
import SwiftGRPC

internal extension Id_IdServiceClient {

  /// RxSwift. Unary.
  internal func new(_ request: Id_NewRequest, metadata customMetadata: Metadata?) -> Observable<Id_NewResponse> {
    return Observable.create { observer in
      _ = try? self.new(request, metadata: customMetadata ?? self.metadata, completion: { resp, result in
        guard let resp: Id_NewResponse = resp else {
          observer.onError(RPCError.callError(result))
          return
        }
        observer.onNext(resp)
      })
      return Disposables.create()
    }
  }

}

