# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from note import note_pb2 as note_dot_note__pb2


class NoteStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/note.Note/Create',
        request_serializer=note_dot_note__pb2.CreateRequest.SerializeToString,
        response_deserializer=note_dot_note__pb2.CreateResponse.FromString,
        )
    self.Get = channel.unary_unary(
        '/note.Note/Get',
        request_serializer=note_dot_note__pb2.GetRequest.SerializeToString,
        response_deserializer=note_dot_note__pb2.GetResponse.FromString,
        )
    self.List = channel.unary_unary(
        '/note.Note/List',
        request_serializer=note_dot_note__pb2.ListRequest.SerializeToString,
        response_deserializer=note_dot_note__pb2.ListResponse.FromString,
        )
    self.Update = channel.unary_unary(
        '/note.Note/Update',
        request_serializer=note_dot_note__pb2.UpdateRequest.SerializeToString,
        response_deserializer=note_dot_note__pb2.UpdateResponse.FromString,
        )
    self.Delete = channel.unary_unary(
        '/note.Note/Delete',
        request_serializer=note_dot_note__pb2.DeleteRequest.SerializeToString,
        response_deserializer=note_dot_note__pb2.DeleteResponse.FromString,
        )


class NoteServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Create(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Get(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def List(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Update(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Delete(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NoteServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=note_dot_note__pb2.CreateRequest.FromString,
          response_serializer=note_dot_note__pb2.CreateResponse.SerializeToString,
      ),
      'Get': grpc.unary_unary_rpc_method_handler(
          servicer.Get,
          request_deserializer=note_dot_note__pb2.GetRequest.FromString,
          response_serializer=note_dot_note__pb2.GetResponse.SerializeToString,
      ),
      'List': grpc.unary_unary_rpc_method_handler(
          servicer.List,
          request_deserializer=note_dot_note__pb2.ListRequest.FromString,
          response_serializer=note_dot_note__pb2.ListResponse.SerializeToString,
      ),
      'Update': grpc.unary_unary_rpc_method_handler(
          servicer.Update,
          request_deserializer=note_dot_note__pb2.UpdateRequest.FromString,
          response_serializer=note_dot_note__pb2.UpdateResponse.SerializeToString,
      ),
      'Delete': grpc.unary_unary_rpc_method_handler(
          servicer.Delete,
          request_deserializer=note_dot_note__pb2.DeleteRequest.FromString,
          response_serializer=note_dot_note__pb2.DeleteResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'note.Note', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
