//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: auth/auth.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import Dispatch
import SwiftGRPC
import SwiftProtobuf

internal protocol Auth_AuthAuthCall: ClientCallUnary {}

fileprivate final class Auth_AuthAuthCallBase: ClientCallUnaryBase<Auth_AuthRequest, Auth_AuthResponse>, Auth_AuthAuthCall {
  override class var method: String { return "/auth.Auth/Auth" }
}

internal protocol Auth_AuthVerifyCall: ClientCallUnary {}

fileprivate final class Auth_AuthVerifyCallBase: ClientCallUnaryBase<Auth_VerifyRequest, Auth_VerifyResponse>, Auth_AuthVerifyCall {
  override class var method: String { return "/auth.Auth/Verify" }
}

internal protocol Auth_AuthRefreshCall: ClientCallUnary {}

fileprivate final class Auth_AuthRefreshCallBase: ClientCallUnaryBase<Auth_RefreshRequest, Auth_RefreshResponse>, Auth_AuthRefreshCall {
  override class var method: String { return "/auth.Auth/Refresh" }
}

internal protocol Auth_AuthParseCall: ClientCallUnary {}

fileprivate final class Auth_AuthParseCallBase: ClientCallUnaryBase<Auth_ParseRequest, Auth_ParseResponse>, Auth_AuthParseCall {
  override class var method: String { return "/auth.Auth/Parse" }
}

internal protocol Auth_AuthJwksCall: ClientCallUnary {}

fileprivate final class Auth_AuthJwksCallBase: ClientCallUnaryBase<Auth_JwksRequest, Auth_JwksResponse>, Auth_AuthJwksCall {
  override class var method: String { return "/auth.Auth/Jwks" }
}


/// Instantiate Auth_AuthServiceClient, then call methods of this protocol to make API calls.
internal protocol Auth_AuthService: ServiceClient {
  /// Synchronous. Unary.
  func auth(_ request: Auth_AuthRequest, metadata customMetadata: Metadata) throws -> Auth_AuthResponse
  /// Asynchronous. Unary.
  func auth(_ request: Auth_AuthRequest, metadata customMetadata: Metadata, completion: @escaping (Auth_AuthResponse?, CallResult) -> Void) throws -> Auth_AuthAuthCall

  /// Synchronous. Unary.
  func verify(_ request: Auth_VerifyRequest, metadata customMetadata: Metadata) throws -> Auth_VerifyResponse
  /// Asynchronous. Unary.
  func verify(_ request: Auth_VerifyRequest, metadata customMetadata: Metadata, completion: @escaping (Auth_VerifyResponse?, CallResult) -> Void) throws -> Auth_AuthVerifyCall

  /// Synchronous. Unary.
  func refresh(_ request: Auth_RefreshRequest, metadata customMetadata: Metadata) throws -> Auth_RefreshResponse
  /// Asynchronous. Unary.
  func refresh(_ request: Auth_RefreshRequest, metadata customMetadata: Metadata, completion: @escaping (Auth_RefreshResponse?, CallResult) -> Void) throws -> Auth_AuthRefreshCall

  /// Synchronous. Unary.
  func parse(_ request: Auth_ParseRequest, metadata customMetadata: Metadata) throws -> Auth_ParseResponse
  /// Asynchronous. Unary.
  func parse(_ request: Auth_ParseRequest, metadata customMetadata: Metadata, completion: @escaping (Auth_ParseResponse?, CallResult) -> Void) throws -> Auth_AuthParseCall

  /// Synchronous. Unary.
  func jwks(_ request: Auth_JwksRequest, metadata customMetadata: Metadata) throws -> Auth_JwksResponse
  /// Asynchronous. Unary.
  func jwks(_ request: Auth_JwksRequest, metadata customMetadata: Metadata, completion: @escaping (Auth_JwksResponse?, CallResult) -> Void) throws -> Auth_AuthJwksCall

}

internal extension Auth_AuthService {
  /// Synchronous. Unary.
  func auth(_ request: Auth_AuthRequest) throws -> Auth_AuthResponse {
    return try self.auth(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  func auth(_ request: Auth_AuthRequest, completion: @escaping (Auth_AuthResponse?, CallResult) -> Void) throws -> Auth_AuthAuthCall {
    return try self.auth(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func verify(_ request: Auth_VerifyRequest) throws -> Auth_VerifyResponse {
    return try self.verify(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  func verify(_ request: Auth_VerifyRequest, completion: @escaping (Auth_VerifyResponse?, CallResult) -> Void) throws -> Auth_AuthVerifyCall {
    return try self.verify(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func refresh(_ request: Auth_RefreshRequest) throws -> Auth_RefreshResponse {
    return try self.refresh(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  func refresh(_ request: Auth_RefreshRequest, completion: @escaping (Auth_RefreshResponse?, CallResult) -> Void) throws -> Auth_AuthRefreshCall {
    return try self.refresh(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func parse(_ request: Auth_ParseRequest) throws -> Auth_ParseResponse {
    return try self.parse(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  func parse(_ request: Auth_ParseRequest, completion: @escaping (Auth_ParseResponse?, CallResult) -> Void) throws -> Auth_AuthParseCall {
    return try self.parse(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func jwks(_ request: Auth_JwksRequest) throws -> Auth_JwksResponse {
    return try self.jwks(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  func jwks(_ request: Auth_JwksRequest, completion: @escaping (Auth_JwksResponse?, CallResult) -> Void) throws -> Auth_AuthJwksCall {
    return try self.jwks(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Auth_AuthServiceClient: ServiceClientBase, Auth_AuthService {
  /// Synchronous. Unary.
  internal func auth(_ request: Auth_AuthRequest, metadata customMetadata: Metadata) throws -> Auth_AuthResponse {
    return try Auth_AuthAuthCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  internal func auth(_ request: Auth_AuthRequest, metadata customMetadata: Metadata, completion: @escaping (Auth_AuthResponse?, CallResult) -> Void) throws -> Auth_AuthAuthCall {
    return try Auth_AuthAuthCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func verify(_ request: Auth_VerifyRequest, metadata customMetadata: Metadata) throws -> Auth_VerifyResponse {
    return try Auth_AuthVerifyCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  internal func verify(_ request: Auth_VerifyRequest, metadata customMetadata: Metadata, completion: @escaping (Auth_VerifyResponse?, CallResult) -> Void) throws -> Auth_AuthVerifyCall {
    return try Auth_AuthVerifyCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func refresh(_ request: Auth_RefreshRequest, metadata customMetadata: Metadata) throws -> Auth_RefreshResponse {
    return try Auth_AuthRefreshCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  internal func refresh(_ request: Auth_RefreshRequest, metadata customMetadata: Metadata, completion: @escaping (Auth_RefreshResponse?, CallResult) -> Void) throws -> Auth_AuthRefreshCall {
    return try Auth_AuthRefreshCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func parse(_ request: Auth_ParseRequest, metadata customMetadata: Metadata) throws -> Auth_ParseResponse {
    return try Auth_AuthParseCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  internal func parse(_ request: Auth_ParseRequest, metadata customMetadata: Metadata, completion: @escaping (Auth_ParseResponse?, CallResult) -> Void) throws -> Auth_AuthParseCall {
    return try Auth_AuthParseCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func jwks(_ request: Auth_JwksRequest, metadata customMetadata: Metadata) throws -> Auth_JwksResponse {
    return try Auth_AuthJwksCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  internal func jwks(_ request: Auth_JwksRequest, metadata customMetadata: Metadata, completion: @escaping (Auth_JwksResponse?, CallResult) -> Void) throws -> Auth_AuthJwksCall {
    return try Auth_AuthJwksCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

