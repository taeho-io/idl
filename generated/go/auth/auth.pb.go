// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth/auth.proto

package auth // import "github.com/taeho-io/idl/generated/go/auth"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/lyft/protoc-gen-validate/validate"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TokenType int32

const (
	TokenType_ACCESS_TOKEN  TokenType = 0
	TokenType_REFRESH_TOKEN TokenType = 1
)

var TokenType_name = map[int32]string{
	0: "ACCESS_TOKEN",
	1: "REFRESH_TOKEN",
}
var TokenType_value = map[string]int32{
	"ACCESS_TOKEN":  0,
	"REFRESH_TOKEN": 1,
}

func (x TokenType) String() string {
	return proto.EnumName(TokenType_name, int32(x))
}
func (TokenType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_auth_ab1224fea812c0d8, []int{0}
}

type AuthRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ab1224fea812c0d8, []int{0}
}
func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (dst *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(dst, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type AuthResponse struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken         string   `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	ExpiresIn            int64    `protobuf:"varint,3,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	UserId               int64    `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ab1224fea812c0d8, []int{1}
}
func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (dst *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(dst, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *AuthResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *AuthResponse) GetExpiresIn() int64 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

func (m *AuthResponse) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type VerifyRequest struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyRequest) Reset()         { *m = VerifyRequest{} }
func (m *VerifyRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyRequest) ProtoMessage()    {}
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ab1224fea812c0d8, []int{2}
}
func (m *VerifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyRequest.Unmarshal(m, b)
}
func (m *VerifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyRequest.Marshal(b, m, deterministic)
}
func (dst *VerifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyRequest.Merge(dst, src)
}
func (m *VerifyRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyRequest.Size(m)
}
func (m *VerifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyRequest proto.InternalMessageInfo

func (m *VerifyRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type VerifyResponse struct {
	IsValid              bool     `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyResponse) Reset()         { *m = VerifyResponse{} }
func (m *VerifyResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyResponse) ProtoMessage()    {}
func (*VerifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ab1224fea812c0d8, []int{3}
}
func (m *VerifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyResponse.Unmarshal(m, b)
}
func (m *VerifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyResponse.Marshal(b, m, deterministic)
}
func (dst *VerifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyResponse.Merge(dst, src)
}
func (m *VerifyResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyResponse.Size(m)
}
func (m *VerifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyResponse proto.InternalMessageInfo

func (m *VerifyResponse) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

type RefreshRequest struct {
	RefreshToken         string   `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshRequest) Reset()         { *m = RefreshRequest{} }
func (m *RefreshRequest) String() string { return proto.CompactTextString(m) }
func (*RefreshRequest) ProtoMessage()    {}
func (*RefreshRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ab1224fea812c0d8, []int{4}
}
func (m *RefreshRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshRequest.Unmarshal(m, b)
}
func (m *RefreshRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshRequest.Marshal(b, m, deterministic)
}
func (dst *RefreshRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshRequest.Merge(dst, src)
}
func (m *RefreshRequest) XXX_Size() int {
	return xxx_messageInfo_RefreshRequest.Size(m)
}
func (m *RefreshRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshRequest proto.InternalMessageInfo

func (m *RefreshRequest) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type RefreshResponse struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken         string   `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	ExpiresIn            int64    `protobuf:"varint,3,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	UserId               int64    `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshResponse) Reset()         { *m = RefreshResponse{} }
func (m *RefreshResponse) String() string { return proto.CompactTextString(m) }
func (*RefreshResponse) ProtoMessage()    {}
func (*RefreshResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ab1224fea812c0d8, []int{5}
}
func (m *RefreshResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshResponse.Unmarshal(m, b)
}
func (m *RefreshResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshResponse.Marshal(b, m, deterministic)
}
func (dst *RefreshResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshResponse.Merge(dst, src)
}
func (m *RefreshResponse) XXX_Size() int {
	return xxx_messageInfo_RefreshResponse.Size(m)
}
func (m *RefreshResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshResponse proto.InternalMessageInfo

func (m *RefreshResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *RefreshResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *RefreshResponse) GetExpiresIn() int64 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

func (m *RefreshResponse) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ParseRequest struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParseRequest) Reset()         { *m = ParseRequest{} }
func (m *ParseRequest) String() string { return proto.CompactTextString(m) }
func (*ParseRequest) ProtoMessage()    {}
func (*ParseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ab1224fea812c0d8, []int{6}
}
func (m *ParseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParseRequest.Unmarshal(m, b)
}
func (m *ParseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParseRequest.Marshal(b, m, deterministic)
}
func (dst *ParseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParseRequest.Merge(dst, src)
}
func (m *ParseRequest) XXX_Size() int {
	return xxx_messageInfo_ParseRequest.Size(m)
}
func (m *ParseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ParseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ParseRequest proto.InternalMessageInfo

func (m *ParseRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type ParseResponse struct {
	UserId               int64     `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TokenType            TokenType `protobuf:"varint,2,opt,name=token_type,json=tokenType,proto3,enum=auth.TokenType" json:"token_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ParseResponse) Reset()         { *m = ParseResponse{} }
func (m *ParseResponse) String() string { return proto.CompactTextString(m) }
func (*ParseResponse) ProtoMessage()    {}
func (*ParseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ab1224fea812c0d8, []int{7}
}
func (m *ParseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParseResponse.Unmarshal(m, b)
}
func (m *ParseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParseResponse.Marshal(b, m, deterministic)
}
func (dst *ParseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParseResponse.Merge(dst, src)
}
func (m *ParseResponse) XXX_Size() int {
	return xxx_messageInfo_ParseResponse.Size(m)
}
func (m *ParseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ParseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ParseResponse proto.InternalMessageInfo

func (m *ParseResponse) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ParseResponse) GetTokenType() TokenType {
	if m != nil {
		return m.TokenType
	}
	return TokenType_ACCESS_TOKEN
}

type JWK struct {
	Kty                  string   `protobuf:"bytes,1,opt,name=kty,proto3" json:"kty,omitempty"`
	E                    string   `protobuf:"bytes,2,opt,name=e,proto3" json:"e,omitempty"`
	N                    string   `protobuf:"bytes,3,opt,name=n,proto3" json:"n,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JWK) Reset()         { *m = JWK{} }
func (m *JWK) String() string { return proto.CompactTextString(m) }
func (*JWK) ProtoMessage()    {}
func (*JWK) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ab1224fea812c0d8, []int{8}
}
func (m *JWK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JWK.Unmarshal(m, b)
}
func (m *JWK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JWK.Marshal(b, m, deterministic)
}
func (dst *JWK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JWK.Merge(dst, src)
}
func (m *JWK) XXX_Size() int {
	return xxx_messageInfo_JWK.Size(m)
}
func (m *JWK) XXX_DiscardUnknown() {
	xxx_messageInfo_JWK.DiscardUnknown(m)
}

var xxx_messageInfo_JWK proto.InternalMessageInfo

func (m *JWK) GetKty() string {
	if m != nil {
		return m.Kty
	}
	return ""
}

func (m *JWK) GetE() string {
	if m != nil {
		return m.E
	}
	return ""
}

func (m *JWK) GetN() string {
	if m != nil {
		return m.N
	}
	return ""
}

type JwksRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JwksRequest) Reset()         { *m = JwksRequest{} }
func (m *JwksRequest) String() string { return proto.CompactTextString(m) }
func (*JwksRequest) ProtoMessage()    {}
func (*JwksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ab1224fea812c0d8, []int{9}
}
func (m *JwksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JwksRequest.Unmarshal(m, b)
}
func (m *JwksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JwksRequest.Marshal(b, m, deterministic)
}
func (dst *JwksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JwksRequest.Merge(dst, src)
}
func (m *JwksRequest) XXX_Size() int {
	return xxx_messageInfo_JwksRequest.Size(m)
}
func (m *JwksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JwksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JwksRequest proto.InternalMessageInfo

type JwksResponse struct {
	Keys                 []*JWK   `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JwksResponse) Reset()         { *m = JwksResponse{} }
func (m *JwksResponse) String() string { return proto.CompactTextString(m) }
func (*JwksResponse) ProtoMessage()    {}
func (*JwksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_ab1224fea812c0d8, []int{10}
}
func (m *JwksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JwksResponse.Unmarshal(m, b)
}
func (m *JwksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JwksResponse.Marshal(b, m, deterministic)
}
func (dst *JwksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JwksResponse.Merge(dst, src)
}
func (m *JwksResponse) XXX_Size() int {
	return xxx_messageInfo_JwksResponse.Size(m)
}
func (m *JwksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JwksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JwksResponse proto.InternalMessageInfo

func (m *JwksResponse) GetKeys() []*JWK {
	if m != nil {
		return m.Keys
	}
	return nil
}

func init() {
	proto.RegisterType((*AuthRequest)(nil), "auth.AuthRequest")
	proto.RegisterType((*AuthResponse)(nil), "auth.AuthResponse")
	proto.RegisterType((*VerifyRequest)(nil), "auth.VerifyRequest")
	proto.RegisterType((*VerifyResponse)(nil), "auth.VerifyResponse")
	proto.RegisterType((*RefreshRequest)(nil), "auth.RefreshRequest")
	proto.RegisterType((*RefreshResponse)(nil), "auth.RefreshResponse")
	proto.RegisterType((*ParseRequest)(nil), "auth.ParseRequest")
	proto.RegisterType((*ParseResponse)(nil), "auth.ParseResponse")
	proto.RegisterType((*JWK)(nil), "auth.JWK")
	proto.RegisterType((*JwksRequest)(nil), "auth.JwksRequest")
	proto.RegisterType((*JwksResponse)(nil), "auth.JwksResponse")
	proto.RegisterEnum("auth.TokenType", TokenType_name, TokenType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error)
	Refresh(ctx context.Context, in *RefreshRequest, opts ...grpc.CallOption) (*RefreshResponse, error)
	Parse(ctx context.Context, in *ParseRequest, opts ...grpc.CallOption) (*ParseResponse, error)
	Jwks(ctx context.Context, in *JwksRequest, opts ...grpc.CallOption) (*JwksResponse, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/auth.Auth/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error) {
	out := new(VerifyResponse)
	err := c.cc.Invoke(ctx, "/auth.Auth/Verify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Refresh(ctx context.Context, in *RefreshRequest, opts ...grpc.CallOption) (*RefreshResponse, error) {
	out := new(RefreshResponse)
	err := c.cc.Invoke(ctx, "/auth.Auth/Refresh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Parse(ctx context.Context, in *ParseRequest, opts ...grpc.CallOption) (*ParseResponse, error) {
	out := new(ParseResponse)
	err := c.cc.Invoke(ctx, "/auth.Auth/Parse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Jwks(ctx context.Context, in *JwksRequest, opts ...grpc.CallOption) (*JwksResponse, error) {
	out := new(JwksResponse)
	err := c.cc.Invoke(ctx, "/auth.Auth/Jwks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	Auth(context.Context, *AuthRequest) (*AuthResponse, error)
	Verify(context.Context, *VerifyRequest) (*VerifyResponse, error)
	Refresh(context.Context, *RefreshRequest) (*RefreshResponse, error)
	Parse(context.Context, *ParseRequest) (*ParseResponse, error)
	Jwks(context.Context, *JwksRequest) (*JwksResponse, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Auth(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Verify(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Refresh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Refresh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/Refresh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Refresh(ctx, req.(*RefreshRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Parse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Parse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/Parse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Parse(ctx, req.(*ParseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Jwks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JwksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Jwks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Auth/Jwks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Jwks(ctx, req.(*JwksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Auth",
			Handler:    _Auth_Auth_Handler,
		},
		{
			MethodName: "Verify",
			Handler:    _Auth_Verify_Handler,
		},
		{
			MethodName: "Refresh",
			Handler:    _Auth_Refresh_Handler,
		},
		{
			MethodName: "Parse",
			Handler:    _Auth_Parse_Handler,
		},
		{
			MethodName: "Jwks",
			Handler:    _Auth_Jwks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth/auth.proto",
}

func init() { proto.RegisterFile("auth/auth.proto", fileDescriptor_auth_ab1224fea812c0d8) }

var fileDescriptor_auth_ab1224fea812c0d8 = []byte{
	// 616 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0xd1, 0x6e, 0xd3, 0x3c,
	0x18, 0x5d, 0x9a, 0x6e, 0x5d, 0xbe, 0xa6, 0x5b, 0xe7, 0xfd, 0xbf, 0x36, 0x2a, 0x86, 0x46, 0x76,
	0x33, 0x18, 0x6d, 0x50, 0x27, 0x24, 0x24, 0x86, 0xc4, 0x36, 0x15, 0xb1, 0x4d, 0x02, 0x94, 0x4d,
	0x1b, 0xe2, 0xa6, 0xca, 0xda, 0x6f, 0xa9, 0x69, 0x89, 0x43, 0xec, 0x32, 0x72, 0xcb, 0x03, 0x20,
	0x21, 0xee, 0x78, 0x14, 0xae, 0x78, 0x07, 0x5e, 0x01, 0x09, 0xf1, 0x16, 0x28, 0xb6, 0x53, 0x92,
	0x8e, 0x2b, 0xae, 0xb8, 0x69, 0xed, 0xe3, 0xef, 0xd8, 0xe7, 0x9c, 0x7c, 0x36, 0x2c, 0xfa, 0x63,
	0x31, 0x70, 0xd3, 0x9f, 0x56, 0x14, 0x33, 0xc1, 0x48, 0x39, 0x1d, 0x37, 0xae, 0x07, 0x8c, 0x05,
	0x23, 0x74, 0xfd, 0x88, 0xba, 0x7e, 0x18, 0x32, 0xe1, 0x0b, 0xca, 0x42, 0xae, 0x6a, 0x1a, 0x0f,
	0x02, 0x2a, 0x06, 0xe3, 0xf3, 0x56, 0x8f, 0xbd, 0x76, 0x47, 0xc9, 0x85, 0x70, 0x25, 0xdc, 0x6b,
	0x06, 0x18, 0x36, 0xdf, 0xfa, 0x23, 0xda, 0xf7, 0x05, 0xba, 0x57, 0x06, 0x8a, 0xec, 0xb4, 0xa1,
	0xba, 0x3b, 0x16, 0x03, 0x0f, 0xdf, 0x8c, 0x91, 0x0b, 0xb2, 0x01, 0x95, 0x31, 0xc7, 0xb8, 0x4b,
	0xfb, 0xab, 0xc6, 0xba, 0xb1, 0x69, 0xee, 0xc1, 0x97, 0x9f, 0x5f, 0xcd, 0x59, 0xc7, 0x5c, 0xff,
	0x51, 0xf1, 0xe6, 0xd2, 0xa5, 0x83, 0xbe, 0xf3, 0xc1, 0x00, 0x5b, 0x91, 0x78, 0xc4, 0x42, 0x8e,
	0xe4, 0x26, 0xd8, 0x7e, 0xaf, 0x87, 0x9c, 0x77, 0x05, 0x1b, 0x62, 0x28, 0xa9, 0x96, 0x57, 0x55,
	0xd8, 0x49, 0x0a, 0x91, 0x0d, 0xa8, 0xc5, 0x78, 0x11, 0x23, 0x1f, 0xe8, 0x9a, 0x92, 0xac, 0xb1,
	0x35, 0xa8, 0x8a, 0xd6, 0x00, 0xf0, 0x5d, 0x44, 0x63, 0xe4, 0x5d, 0x1a, 0xae, 0x9a, 0xa9, 0x00,
	0xcf, 0xd2, 0xc8, 0x41, 0x48, 0x56, 0x7e, 0x8b, 0x2b, 0xcb, 0xb5, 0x4c, 0xd0, 0x43, 0xa8, 0x9d,
	0x62, 0x4c, 0x2f, 0x92, 0xcc, 0xc6, 0x9d, 0x3f, 0x09, 0xda, 0xb3, 0x52, 0x2f, 0xe5, 0xb8, 0x54,
	0xbf, 0x51, 0xd0, 0xe6, 0x6c, 0xc1, 0x42, 0x46, 0xd7, 0x86, 0xae, 0xc1, 0x3c, 0xe5, 0x5d, 0x19,
	0x95, 0xe4, 0xce, 0x7b, 0x15, 0xca, 0x4f, 0xd3, 0xa9, 0xf3, 0x08, 0x16, 0x3c, 0xa5, 0x39, 0x3b,
	0xac, 0x35, 0x6d, 0xed, 0xca, 0x69, 0x05, 0x97, 0xce, 0x47, 0x03, 0x16, 0x27, 0x5b, 0xfc, 0x23,
	0x09, 0xee, 0x80, 0xfd, 0xdc, 0x8f, 0x39, 0xfe, 0x5d, 0x80, 0x2f, 0xa0, 0xa6, 0xd9, 0xda, 0xce,
	0xca, 0x54, 0x1b, 0x65, 0xe7, 0x90, 0x16, 0x80, 0xdc, 0xb0, 0x2b, 0x92, 0x08, 0xa5, 0x83, 0x85,
	0xf6, 0x62, 0x4b, 0x36, 0xbc, 0xdc, 0xea, 0x24, 0x89, 0xd0, 0xb3, 0x44, 0x36, 0x74, 0xb6, 0xc1,
	0x3c, 0x3c, 0x3b, 0x22, 0x75, 0x30, 0x87, 0x22, 0xd1, 0xa9, 0xa4, 0x43, 0x62, 0x83, 0x81, 0x3a,
	0x01, 0x03, 0xd3, 0x99, 0x72, 0x6b, 0x79, 0x46, 0xe8, 0xd4, 0xa0, 0x7a, 0x78, 0x39, 0xe4, 0xda,
	0x8b, 0xd3, 0x04, 0x5b, 0x4d, 0xb5, 0xb8, 0x35, 0x28, 0x0f, 0x31, 0xe1, 0xab, 0xc6, 0xba, 0xb9,
	0x59, 0x6d, 0x5b, 0xea, 0xf4, 0xc3, 0xb3, 0x23, 0x4f, 0xc2, 0xb7, 0xef, 0x82, 0x35, 0x91, 0x42,
	0xea, 0x60, 0xef, 0xee, 0xef, 0x77, 0x8e, 0x8f, 0xbb, 0x27, 0xcf, 0x8e, 0x3a, 0x4f, 0xeb, 0x33,
	0x64, 0x09, 0x6a, 0x5e, 0xe7, 0xb1, 0xd7, 0x39, 0x7e, 0xa2, 0x21, 0xa3, 0xfd, 0xb9, 0x04, 0xe5,
	0xf4, 0x3e, 0x10, 0x57, 0xff, 0x2f, 0xa9, 0x3d, 0x73, 0x17, 0xab, 0x41, 0xf2, 0x90, 0x12, 0xe2,
	0xcc, 0x90, 0x7b, 0x30, 0xa7, 0x3a, 0x8f, 0x2c, 0xab, 0xf5, 0x42, 0x1b, 0x37, 0xfe, 0x2b, 0x82,
	0x13, 0xda, 0x7d, 0xa8, 0xe8, 0x06, 0x22, 0xba, 0xa4, 0xd8, 0x92, 0x8d, 0xff, 0xa7, 0xd0, 0x09,
	0xb3, 0x0d, 0xb3, 0xf2, 0x4b, 0x11, 0xad, 0x27, 0xff, 0xd1, 0x1b, 0xcb, 0x05, 0x6c, 0xc2, 0xd9,
	0x81, 0x72, 0x9a, 0x5f, 0xe6, 0x2a, 0x17, 0x6d, 0xe6, 0x2a, 0x1f, 0xaf, 0x53, 0x7b, 0xff, 0xed,
	0xfb, 0xa7, 0x52, 0x85, 0xcc, 0xba, 0xaf, 0x2e, 0x87, 0x7c, 0x6f, 0xeb, 0xe5, 0xad, 0xdc, 0xfb,
	0x24, 0x7c, 0x1c, 0xb0, 0x26, 0x65, 0x2e, 0xed, 0x8f, 0xdc, 0x00, 0x43, 0x8c, 0x7d, 0x81, 0x7d,
	0x37, 0x60, 0xf2, 0xd1, 0x3b, 0x9f, 0x93, 0x8f, 0xd2, 0xf6, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x09, 0x10, 0x1e, 0xd4, 0x08, 0x05, 0x00, 0x00,
}
